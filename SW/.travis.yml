# Continuous Integration (CI) is the practice, in software
# engineering, of merging all developer working copies with a shared mainline
# several times a day < http://docs.platformio.org/page/ci/index.html >
#
# Documentation:
#
# * Travis CI Embedded Builds with PlatformIO
#   < https://docs.travis-ci.com/user/integration/platformio/ >
#
# * PlatformIO integration with Travis CI
#   < http://docs.platformio.org/page/ci/travis.html >
#
# * User Guide for `platformio ci` command
#   < http://docs.platformio.org/page/userguide/cmd_ci.html >
#
#
# Please choice one of the following templates (proposed below) and uncomment
# it (remove "# " before each line) or use own configuration according to the
# Travis CI documentation (see above).
#


#
# Template #1: General project. Test it using existing `platformio.ini`.
#

 language: python
 python:
     - "2.7"

 sudo: required
 cache:
     directories:
         - "~/.platformio"

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - gcc-4.9
            - g++-4.9

before_install:
    # Setup Test Environment
    - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90
    - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 90
    - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.9 90

install:
    # Check GCC versions
    - g++ --version
    - gcc --version
    - gcov --version

    # Install Coveralls
    - pip install -U cpp-coveralls

    # Install PlatformIO
    - pip install -U platformio

    # Login to PioPlus
    - pio account login --username $PIO_PLUS_USERNAME --password $PIO_PLUS_PASSWORD

before_script:
    # Run tests
    - platformio test -e uno

    # Run tests again with coverage
    #- g++ test/test_servo_mock/test_servo_mock.cpp -I ~/.platformio/packages/tool-unity/ -I src -I ../ArduinoFrameworkFake/src/ -std=c++11 -o run -DUNIT_TEST src/main.cpp ../ArduinoFrameworkFake/src/Arduino.cpp ../ArduinoFrameworkFake/src/AxxTest.cpp ~/.platformio/packages/tool-unity/unity.c -fpermissive --coverage -g -O0
    #- ./run

    # Upload code coverage report
    - coveralls --exclude test/ --exclude code_analysis/ --exclude lib/ --gcov-options '\-lp'
    - bash <(curl -s https://codecov.io/bash)

 script:
     - platformio run


#
# Template #2: The project is intended to by used as a library with examples
#

# language: python
# python:
#     - "2.7"
#
# sudo: false
# cache:
#     directories:
#         - "~/.platformio"
#
# env:
#     - PLATFORMIO_CI_SRC=path/to/test/file.c
#     - PLATFORMIO_CI_SRC=examples/file.ino
#     - PLATFORMIO_CI_SRC=path/to/test/directory
#
# install:
#     - pip install -U platformio
#
# script:
#     - platformio ci --lib="." --board=ID_1 --board=ID_2 --board=ID_N
